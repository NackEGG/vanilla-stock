/* 테이블 삭제 */
DROP TABLE MEMBER CASCADE CONSTRAINTS;
DROP TABLE MEMBER_LOG CASCADE CONSTRAINTS;
DROP TABLE STOCK_RECORDS CASCADE CONSTRAINTS;
DROP TABLE COMPANY CASCADE CONSTRAINTS;
DROP TABLE INDUSTRY CASCADE CONSTRAINTS;
DROP TABLE FINANCE CASCADE CONSTRAINTS;
DROP TABLE FINANCE_CATE CASCADE CONSTRAINTS;
DROP TABLE ANNOUNCEMENT CASCADE CONSTRAINTS;
DROP TABLE ARTICLE CASCADE CONSTRAINTS;
DROP TABLE COMMENTS CASCADE CONSTRAINTS;
DROP TABLE PICK CASCADE CONSTRAINTS;
DROP TABLE LIKES CASCADE CONSTRAINTS;
DROP TABLE HIT CASCADE CONSTRAINTS;

/* 시컨스 삭제 */
DROP SEQUENCE MEMBER_SEQ;
DROP SEQUENCE STOCK_RECORDS_SEQ;
DROP SEQUENCE INDUSTRY_SEQ;
DROP SEQUENCE ANNOUNCEMENT_SEQ;
DROP SEQUENCE ARTICLE_SEQ;
DROP SEQUENCE COMMENTS_SEQ;
DROP SEQUENCE PICK_SEQ;
DROP SEQUENCE LIKES_SEQ;
DROP SEQUENCE HIT_SEQ;
DROP SEQUENCE FINANCE_SEQ;
DROP SEQUENCE MEMBER_LOG_SEQ;

/* 시컨스 생성 */
CREATE SEQUENCE MEMBER_SEQ
START with 1
INCREMENT by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence STOCK_RECORDS_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence INDUSTRY_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence ANNOUNCEMENT_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence ARTICLE_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence COMMENTS_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence PICK_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence LIKES_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence HIT_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence FINANCE_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

create sequence MEMBER_LOG_SEQ
start with 1
increment by 1
maxvalue 9999999999999999999
minvalue 1
nocache
nocycle
noorder;

/* 공지사항 */
CREATE TABLE ANNOUNCEMENT (
   NO NUMBER DEFAULT 1 NOT NULL, /* 기본키 */
   TITLE VARCHAR2(200), /* 제목 */
   CONTENT BLOB, /* 내용 */
   REGDATE DATE DEFAULT SYSDATE /* 작성일 */
);

COMMENT ON TABLE ANNOUNCEMENT IS '공지사항';

COMMENT ON COLUMN ANNOUNCEMENT.NO IS '기본키';

COMMENT ON COLUMN ANNOUNCEMENT.TITLE IS '제목';

COMMENT ON COLUMN ANNOUNCEMENT.CONTENT IS '내용';

COMMENT ON COLUMN ANNOUNCEMENT.REGDATE IS '작성일';

CREATE UNIQUE INDEX PK_ANNOUNCEMENT
   ON ANNOUNCEMENT (
      NO ASC
   );

ALTER TABLE ANNOUNCEMENT
   ADD
      CONSTRAINT PK_ANNOUNCEMENT
      PRIMARY KEY (
         NO
      );

/* 투기장 */
CREATE TABLE ARTICLE (
   NO NUMBER NOT NULL, /* 기본키 */
   TITLE VARCHAR2(200), /* 제목 */
   STOCK_CODE VARCHAR2(6), /* 회사코드 */
   MEMBER_NO NUMBER DEFAULT 1, /* 만든 유저 */
   REGDATE DATE /* 작성일 */
);

COMMENT ON TABLE ARTICLE IS '투기장';

COMMENT ON COLUMN ARTICLE.NO IS '기본키';

COMMENT ON COLUMN ARTICLE.TITLE IS '제목';

COMMENT ON COLUMN ARTICLE.STOCK_CODE IS '회사코드';

COMMENT ON COLUMN ARTICLE.MEMBER_NO IS '유저';

COMMENT ON COLUMN ARTICLE.REGDATE IS '작성일';

CREATE UNIQUE INDEX PK_ARTICLE
   ON ARTICLE (
      NO ASC
   );

ALTER TABLE ARTICLE
   ADD
      CONSTRAINT PK_ARTICLE
      PRIMARY KEY (
         NO
      );

/* 댓글 */
CREATE TABLE COMMENTS (
   NO NUMBER NOT NULL, /* 기본키 */
   MEMBER_NO NUMBER NOT NULL, /* 유저 번호 */
  ARTICLE_NO NUMBER NOT NULL, /*게시글 번호*/
   CONTENT VARCHAR2(30) NOT NULL, /* 내용 */
   REGDATE DATE NOT NULL /* 작성일 */
);

COMMENT ON TABLE COMMENTS IS '댓글';

COMMENT ON COLUMN COMMENTS.NO IS '기본키';

COMMENT ON COLUMN COMMENTS.MEMBER_NO IS '유저번호';

COMMENT ON COLUMN COMMENTS.ARTICLE_NO IS '게시글 번호';

COMMENT ON COLUMN COMMENTS.CONTENT IS '내용';

COMMENT ON COLUMN COMMENTS.REGDATE IS '작성일';



CREATE UNIQUE INDEX PK_COMMENTS
   ON COMMENTS (
      NO ASC
   );

ALTER TABLE COMMENTS
   ADD
      CONSTRAINT PK_COMMENTS
      PRIMARY KEY (
         NO
      );

/* 회사 */
CREATE TABLE COMPANY (
   STOCK_CODE VARCHAR2(6) NOT NULL, /* 회사코드 */
   COMPANY VARCHAR2(100) DEFAULT 9999, /* 회사명 */
   INDUSTRY_NO NUMBER DEFAULT 1, /* 업종코드 */
   REGDATE DATE DEFAULT SYSDATE /* 등록일 */
);

COMMENT ON TABLE COMPANY IS '회사';

COMMENT ON COLUMN COMPANY.STOCK_CODE IS '회사코드';

COMMENT ON COLUMN COMPANY.COMPANY IS '회사명';

COMMENT ON COLUMN COMPANY.INDUSTRY_NO IS '업종코드';

COMMENT ON COLUMN COMPANY.REGDATE IS '등록일';

CREATE UNIQUE INDEX PK_COMPANY
   ON COMPANY (
      STOCK_CODE ASC
   );

ALTER TABLE COMPANY
   ADD
      CONSTRAINT PK_COMPANY
      PRIMARY KEY (
         STOCK_CODE
      );

/* 재무정보 */
CREATE TABLE FINANCE (
   NO NUMBER NOT NULL, /* 기본키 */
   YEAR DATE, /* 연도 */
   QUARTER NUMBER, /* 분기 */
   STOCK_CODE VARCHAR2(6), /* 회사코드 */
   ACCOUNT_CODE VARCHAR2(30), /* 항목코드 */
   ACCOUNT_VALUE NUMBER, /* 항목값 */
   REGDATE DATE /* 작성일 */
);

COMMENT ON TABLE FINANCE IS '재무정보';

COMMENT ON COLUMN FINANCE.NO IS '기본키';

COMMENT ON COLUMN FINANCE.YEAR IS '연도';

COMMENT ON COLUMN FINANCE.QUARTER IS '분기';

COMMENT ON COLUMN FINANCE.STOCK_CODE IS '회사코드';

COMMENT ON COLUMN FINANCE.ACCOUNT_CODE IS '항목코드';

COMMENT ON COLUMN FINANCE.ACCOUNT_VALUE IS '항목값';

COMMENT ON COLUMN FINANCE.REGDATE IS '작성일';

CREATE UNIQUE INDEX PK_FINANCE
   ON FINANCE (
      NO ASC
   );

ALTER TABLE FINANCE
   ADD
      CONSTRAINT PK_FINANCE
      PRIMARY KEY (
         NO
      );

/* 재무항목정보 */
CREATE TABLE FINANCE_CATE (
sj_div  VARCHAR2(10) NOT NULL, /* 재무제표구분 */
account_id VARCHAR2(30) NOT NULL, /* 계정 고유명칭 */
account_nm VARCHAR2(30) NOT NULL, /* 계정명 */
bsns_de DATE, /* 적용 기준일 */
label_kor VARCHAR2(100), /* 한글 출력명 */
label_eng VARCHAR2(100)  /* 영문 출력명 */
);

COMMENT ON COLUMN FINANCE_CATE.sj_div IS ‘재무제표구분’;

COMMENT ON COLUMN FINANCE_CATE.account_id IS ‘계정고유명칭’;

COMMENT ON COLUMN FINANCE_CATE.bsns_de IS ‘적용기준일’;

COMMENT ON COLUMN FINANCE_CATE.label_kor IS ‘한글출력명’;

COMMENT ON COLUMN FINANCE_CATE.label_eng IS ‘영문출력명’;


CREATE UNIQUE INDEX PK_FINANCE_CATE
   ON FINANCE_CATE (
      account_id ASC
   );

ALTER TABLE FINANCE_CATE
   ADD
      CONSTRAINT PK_FINANCE_CATE
      PRIMARY KEY (
         account_id
      );

/* 조회수 */
CREATE TABLE HIT (
   NO NUMBER NOT NULL, /* 기본키 */
   USER_TYPE  CHAR(1) NOT NULL, /*유저 타입 - ‘M’/’N’ 회원/비회원 */
   USER_NO NUMBER NOT NULL,
   BOARD_TYPE CHAR(1) NOT NULL, /* 글종류 */
   BOARD_NO NUMBER NOT NULL, /* 글번호 */
   REGDATE DATE NOT NULL /* 작성일 */
);

COMMENT ON TABLE HIT IS '조회수';

COMMENT ON COLUMN HIT.NO IS '기본키';

COMMENT ON COLUMN HIT.BOARD_TYPE IS '글종류';

COMMENT ON COLUMN HIT.BOARD_NO IS '글번호';

COMMENT ON COLUMN HIT.REGDATE IS '작성일';

CREATE UNIQUE INDEX PK_HIT
   ON HIT (
      NO ASC
   );

ALTER TABLE HIT
   ADD
      CONSTRAINT PK_HIT
      PRIMARY KEY (
         NO
      );

/* 업종정보 */
CREATE TABLE INDUSTRY (
   NO NUMBER DEFAULT 1 NOT NULL, /* 업종코드 */
   NAME VARCHAR2(100), /* 업종명 */
   REGDATE DATE DEFAULT SYSDATE /* 등록일 */
);

COMMENT ON TABLE INDUSTRY IS '업종정보';

COMMENT ON COLUMN INDUSTRY.NO IS '업종코드';

COMMENT ON COLUMN INDUSTRY.NAME IS '업종명';

COMMENT ON COLUMN INDUSTRY.REGDATE IS '등록일';

CREATE UNIQUE INDEX PK_INDUSTRY
   ON INDUSTRY (
      NO ASC
   );

ALTER TABLE INDUSTRY
   ADD
      CONSTRAINT PK_INDUSTRY
      PRIMARY KEY (
         NO
      );

/* 좋아요 */
CREATE TABLE LIKES (
   NO NUMBER NOT NULL, /* 기본키 */
   COMMENT_NO NUMBER NOT NULL, /* 댓글번호 */
   MEMBER_NO NUMBER DEFAULT 1, /* 유저번호 */
   REGDATE DATE NOT NULL /* 작성일 */
);

COMMENT ON TABLE LIKES IS '좋아요';

COMMENT ON COLUMN LIKES.NO IS '기본키';

COMMENT ON COLUMN LIKES.COMMENT_NO IS '댓글번호';

COMMENT ON COLUMN LIKES.MEMBER_NO IS '유저번호';

COMMENT ON COLUMN LIKES.REGDATE IS '작성일';

CREATE UNIQUE INDEX PK_LIKES
   ON LIKES (
      NO ASC
   );

ALTER TABLE LIKES
   ADD
      CONSTRAINT PK_LIKES
      PRIMARY KEY (
         NO
      );

/* 회원 */
CREATE TABLE MEMBER (
   NO NUMBER DEFAULT 1 NOT NULL, /* 회원넘버 */
   EMAIL VARCHAR2(400), /* 이메일 */
   PASSWORD VARCHAR2(30), /* 패스워드 */
   BIRTHDAY DATE, /* 생일 */
   SCORE NUMBER(6,2), /* 점수 */
   GENDER CHAR(1), /* 성별 */
   NICKNAME VARCHAR2(50), /* 닉네임 */
   PROFILE BLOB, /* 프로필 */
   REGDATE DATE DEFAULT SYSDATE /* 등록일 */
);

COMMENT ON TABLE MEMBER IS '회원';

COMMENT ON COLUMN MEMBER.NO IS '회원넘버';

COMMENT ON COLUMN MEMBER.EMAIL IS '이메일';

COMMENT ON COLUMN MEMBER.PASSWORD IS '패스워드';

COMMENT ON COLUMN MEMBER.BIRTHDAY IS '생일';

COMMENT ON COLUMN MEMBER.SCORE IS '점수';

COMMENT ON COLUMN MEMBER.GENDER IS '성별';

COMMENT ON COLUMN MEMBER.NICKNAME IS '닉네임';

COMMENT ON COLUMN MEMBER.PROFILE IS '프로필';

COMMENT ON COLUMN MEMBER.REGDATE IS '등록일';

CREATE UNIQUE INDEX PK_MEMBER
   ON MEMBER (
      NO ASC
   );

ALTER TABLE MEMBER
   ADD
      CONSTRAINT PK_MEMBER
      PRIMARY KEY (
         NO
      );

/* 회원로그 */
CREATE TABLE MEMBER_LOG (
   NO NUMBER NOT NULL, /* 기본키 */
   MEMBER_NO NUMBER DEFAULT 1, /* 유저번호 */
   SCREEN VARCHAR2(400), /* 방문화면 */
   ACTION VARCHAR2(100), /* 활동내역 */
   REGDATE DATE DEFAULT SYSDATE /* 등록시간 */
);

COMMENT ON TABLE MEMBER_LOG IS '회원로그';

COMMENT ON COLUMN MEMBER_LOG.NO IS '기본키';

COMMENT ON COLUMN MEMBER_LOG.MEMBER_NO IS '유저번호';

COMMENT ON COLUMN MEMBER_LOG.SCREEN IS '방문화면';

COMMENT ON COLUMN MEMBER_LOG.ACTION IS '활동내역';

COMMENT ON COLUMN MEMBER_LOG.REGDATE IS '등록시간';

CREATE UNIQUE INDEX PK_MEMBER_LOG
   ON MEMBER_LOG (
      NO ASC
   );

ALTER TABLE MEMBER_LOG
   ADD
      CONSTRAINT PK_MEMBER_LOG
      PRIMARY KEY (
         NO
      );

/* 투자의견 */
CREATE TABLE PICK (
   NO NUMBER NOT NULL, /* 기본키 */
   OPINION CHAR(1) NOT NULL, /* 투자의견 타입 */
   MEMBER_NO NUMBER NOT NULL, /* 유저 번호 */
   ARTICLE_NO NUMBER NOT NULL, /* 게시글 번호 */
 REGDATE DATE NOT NULL /* 작성일 */
);


COMMENT ON TABLE PICK IS '투자의견';

COMMENT ON COLUMN PICK.NO IS '기본키';

COMMENT ON COLUMN PICK.OPINION IS '투자의견';

COMMENT ON COLUMN PICK.MEMBER_NO IS '유저';

COMMENT ON COLUMN PICK.REGDATE IS '작성일';

CREATE UNIQUE INDEX PK_PICK
   ON PICK (
      NO ASC
   );

ALTER TABLE PICK
   ADD
      CONSTRAINT PK_PICK
      PRIMARY KEY (
         NO
      );

ALTER TABLE PICK
   ADD 
      CONSTRAINT CHK_PICK_OPINION 
      CHECK (
         OPINION IN ('Y','N')
      );



/* 주식정보 */
CREATE TABLE STOCK_RECORDS (
   NO NUMBER DEFAULT 1 NOT NULL, /* 기본키 */
   OPEN NUMBER, /* 시가 */
   HIGH NUMBER DEFAULT 0, /* 고가 */
   LOW NUMBER DEFAULT 0, /* 저가 */
   CLOSE NUMBER DEFAULT 0, /* 종가 */
   VOLUME NUMBER, /* 거래량 */
   ADJ_CLOSE NUMBER(20, 2) DEFAULT 0.00, /* 수정주가 */
   STOCK_CODE VARCHAR2(6), /* 회사코드 */
   T_DATE DATE DEFAULT SYSDATE /* 등록일 */
);

COMMENT ON TABLE STOCK_RECORDS IS '주식정보';

COMMENT ON COLUMN STOCK_RECORDS.NO IS '기본키';

COMMENT ON COLUMN STOCK_RECORDS.OPEN IS '시가';

COMMENT ON COLUMN STOCK_RECORDS.HIGH IS '고가';

COMMENT ON COLUMN STOCK_RECORDS.LOW IS '저가';

COMMENT ON COLUMN STOCK_RECORDS.CLOSE IS '종가';

COMMENT ON COLUMN STOCK_RECORDS.VOLUME IS '거래량';

COMMENT ON COLUMN STOCK_RECORDS.ADJ_CLOSE IS '수정주가';

COMMENT ON COLUMN STOCK_RECORDS.STOCK_CODE IS '회사코드';

COMMENT ON COLUMN STOCK_RECORDS.T_DATE IS '등록일';

CREATE UNIQUE INDEX PK_STOCK_RECORDS
   ON STOCK_RECORDS (
      NO ASC
   );

ALTER TABLE STOCK_RECORDS
   ADD
      CONSTRAINT PK_STOCK_RECORDS
      PRIMARY KEY (
         NO
      );

ALTER TABLE ARTICLE
   ADD
      CONSTRAINT FK_MEMBER_TO_ARTICLE
      FOREIGN KEY (
         MEMBER_NO
      )
      REFERENCES MEMBER (
         NO
      );

ALTER TABLE ARTICLE
   ADD
      CONSTRAINT FK_COMPANY_TO_ARTICLE
      FOREIGN KEY (
         STOCK_CODE
      )
      REFERENCES COMPANY (
         STOCK_CODE
      );

ALTER TABLE COMMENTS
   ADD
      CONSTRAINT FK_MEMBER_TO_COMMENTS
      FOREIGN KEY (
         MEMBER_NO
      )
      REFERENCES MEMBER (
         NO
      );

ALTER TABLE COMMENTS
   ADD
      CONSTRAINT FK_ARTICLE_TO_COMMENTS
      FOREIGN KEY (
        ARTICLE_NO
      )
      REFERENCES ARTICLE (
         NO
      );
ALTER TABLE PICK
   ADD
      CONSTRAINT FK_ARTICLE_TO_PICK
      FOREIGN KEY (
        ARTICLE_NO
      )
      REFERENCES ARTICLE (
         NO
      );

ALTER TABLE LIKES
   ADD
      CONSTRAINT FK_COMMENTS_TO_LIKES
      FOREIGN KEY (
        COMMENT_NO
      )
      REFERENCES COMMENTS (
         NO
      );



ALTER TABLE COMPANY
   ADD
      CONSTRAINT FK_INDUSTRY_TO_COMPANY
      FOREIGN KEY (
         INDUSTRY_NO
      )
      REFERENCES INDUSTRY (
         NO
      );

ALTER TABLE FINANCE
   ADD
      CONSTRAINT FK_COMPANY_TO_FINANCE
      FOREIGN KEY (
         STOCK_CODE
      )
      REFERENCES COMPANY (
         STOCK_CODE
      );

ALTER TABLE FINANCE
   ADD
      CONSTRAINT FK_FINANCE_CATE_TO_FINANCE
      FOREIGN KEY (
         ACCOUNT_CODE
      )
      REFERENCES FINANCE_CATE (
         account_id
      );

ALTER TABLE LIKES
   ADD
      CONSTRAINT FK_MEMBER_TO_LIKES
      FOREIGN KEY (
         MEMBER_NO
      )
      REFERENCES MEMBER (
         NO
      );

ALTER TABLE MEMBER_LOG
   ADD
      CONSTRAINT FK_MEMBER_TO_MEMBER_LOG
      FOREIGN KEY (
         MEMBER_NO
      )
      REFERENCES MEMBER (
         NO
      );

ALTER TABLE PICK
   ADD
      CONSTRAINT FK_MEMBER_TO_PICK
      FOREIGN KEY (
         MEMBER_NO
      )
      REFERENCES MEMBER (
         NO
      );

ALTER TABLE STOCK_RECORDS
   ADD
      CONSTRAINT FK_COMPANY_TO_STOCK_RECORDS
      FOREIGN KEY (
         STOCK_CODE
      )
      REFERENCES COMPANY (
         STOCK_CODE
      );


